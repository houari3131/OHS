if(localStorage.CaptchaType == 'Apikey' && localStorage.getItem('Captcha Login Auto Solve') == 'true' && localStorage.captchaautosolve == 'true' ){
    function loadCryptoJS(callback) {
        var script = document.createElement('script');
        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js';
        script.onload = callback;
        document.head.appendChild(script);
    }

    function waitForElement(selector, callback) {
        const element = document.querySelector(selector);
        if (element) {
            callback();
        } else {
            setTimeout(() => waitForElement(selector, callback), 500); // Retry after 500ms
        }
    }

 var deleteAlert = setInterval(function(){window.alert = function() {};},100);

   function solveCaptcha() {
   console.log("solveCaptcha function started.");

        // Retrieve and decrypt the value from localStorage
        const storedEncryptedValue = localStorage.getItem('CaptchaApikey');
        const decryptedValue = CryptoJS.AES.decrypt(storedEncryptedValue, 'secret-passphrase').toString(CryptoJS.enc.Utf8);
        //console.log('Decrypted Captcha API key:', decryptedValue);

       // const captchaApikey = decryptedValue;
    const captchaApikey = localStorage.Apikey
    const captcha = {
        enabled: 'true',
        apiKey: captchaApikey,
    };

    const applicants = [
        {
            mail: localStorage.email,
            password: localStorage.password,
            profilePhotoId: localStorage.photoId,
        },
    ];

    const autoSubmitForms = {
        login: localStorage.autoLogin,
        loginCaptcha: localStorage.captchaautosolve,
        appointmentCaptcha: localStorage.captchaautosolve,
        visaType: 'on',
        slotSelection: 'on',
        applicantSelection: 'on',
    };

    function removeRandomnessFromUi() {
        // Center main content
        $('body > .row > [class^=col-]').hide();
        $('body > .row > :has(form)').addClass('mx-auto');

        // Reorder elements
        $('#captcha-main-div').addClass('d-flex flex-column');
        $('#captcha-main-div > .pwd-div:has(form)').addClass('order-0').css({ height: 'auto' });
        $('#captcha-main-div > .main-div-container').addClass('order-1');
        $('#captcha-main-div > .pwd-div:not(:has(*))').hide();
    }

    function enableCopyPasteInInputs() {
        $('.entry-disabled:visible').off('copy paste');
    }

    function getActiveApplicant() {
        const activemail = localStorage.email;
        return applicants.find(({ mail }) => mail === activemail);
    }

    function setPassword(applicant) {
        $(':password:visible').val(applicant?.password);
    }
    
    function getCaptchaTarget() {
        return $('.box-label')
            .sort((a, b) => getComputedStyle(b).zIndex - getComputedStyle(a).zIndex)
            .first()
            .text()
            .replace(/\D+/, '');
    }

    function getCaptchaGrid() {
        // From top-to-bottom and left-to-right
        return $(':has(> .captcha-img):visible').get()
            // Group by top position
            .reduce((acc, cur) => {
                (acc[Math.floor(cur.offsetTop)] ??= []).push(cur);
                return acc;
            }, [])
            .flatMap(sortedByTop => {
                const sortedByZIndex = sortedByTop.sort((a, b) => getComputedStyle(b).zIndex - getComputedStyle(a).zIndex);
                const top3 = sortedByZIndex.slice(0, 3); // max cells
                const sortedByLeft = top3.sort((a, b) => a.offsetLeft - b.offsetLeft);
                return sortedByLeft;
            })
            .map(element => element.firstElementChild);
    }

    function solve() {
        if (!(/on|true/.test(captcha.enabled) && captcha.apiKey)) return;

        const target = getCaptchaTarget();
        const grid = getCaptchaGrid();

        const extractCaptchaGridData = grid => Object.fromEntries(grid.map(img => img.src).entries());

        const onSuccess = result => {
            if (result.status === 'solved') {
                // Apply solution
                Object.entries(result.solution).forEach(([index, value]) => value === target && grid[index].click());
                // Auto submit
                /on|true/.test(autoSubmitForms?.loginCaptcha) && $('#btnVerify').trigger('click');
// Redirect to the desired URL after CAPTCHA is solved and form is submitted
                 //   window.location.href = 'https://www.blsspainmorocco.net/MAR/Appointment/NewAppointment';
            } else {
                onError('captchaerror', result);
            }
        };
        
        const onError = (type, data) => {
            console.error(type, data);
            $('.validation-summary-valid').html('<b>Failed to solve captcha.</b>');
        };

        $.post({
            url: 'https://pro.nocaptchaai.com/solve',
            headers: { apiKey: captcha.apiKey },
            contentType: 'application/json',
            dataType: 'json',
            data: JSON.stringify({
                method: 'ocr',
                id: 'morocco',
                images: extractCaptchaGridData(grid),
            }),
            timeout: 30000,

            complete(xhr, state) {
                this._loading?.remove();

                switch (state) {
                    case 'success':
                        onSuccess(xhr.responseJSON);
                        break;
                    case 'error':
                    case 'parsererror':
                        onError(state, xhr);
                        break;
                }
            },
        });
    }
        removeRandomnessFromUi();
       enableCopyPasteInInputs();
        const applicant = getActiveApplicant();
        setPassword(applicant);
        
        waitForElement('.box-label', () => {
            if (localStorage.captchaautosolve === 'true' && localStorage.getItem('Captcha Visa Type Auto Solve') === 'true') {
                solve();
            }
        });
   }
    function start() {
    loadCryptoJS(solveCaptcha);
     var LoginAutoSolveCaptcha = localStorage.getItem('Captcha Login Auto Solve');
        
      
if(localStorage.captchaautosolve == 'true' && LoginAutoSolveCaptcha == 'true'){
        solveCaptcha();
}
  
    }   
   
    start();
}
